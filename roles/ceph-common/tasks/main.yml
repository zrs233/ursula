---
- include: check_system_and_vars.yml

- name: install dependencies
  apt: pkg={{ item }}
       state=present
       update_cache=yes
       cache_valid_time=3600
  with_items: ceph_common.debian_pkgs

- name: install ceph
  apt: pkg={{ item }}
       state=present
  with_items: ceph_common.ceph_pkgs

- name: configure rbd clients directories
  file: path={{ item }}
        state=directory
        owner=libvirt-qemu
        group=kvm
        mode=0755
  with_items: ceph_common.rbd_client_paths
  when: ceph_common.rbd_client_directories

- name: check for a ceph socket
  shell: "stat /var/run/ceph/*.asok > /dev/null 2>&1"
  changed_when: false
  failed_when: false
  register: socket

# we're storing the fsid in a file on the first monitor node
- name: generate fsid file if we don't have one
  shell: uuidgen > /etc/ceph/fsid
         creates=/etc/ceph/fsid
  run_once: true
  delegate_to:  "{{ groups['mons'][0] }}"

- name: fetch contents of fsid file
  slurp: path=/etc/ceph/fsid
  run_once: true
  delegate_to: "{{ groups['mons'][0] }}"
  register: fsid_file

# for redundancy, and if the hosts in mons get reordered
- name: copy fsid to all hosts
  copy:
    dest: "{{ fsid_file['source'] }}"
    content: "{{ fsid_file['content'] | b64decode }}"

- name: detect and register public and cluster network
  shell: ip addr | grep {{ ceph_common.monitor_interface }} | grep inet | awk '{print $2}'
  run_once: true
  delegate_to: "{{ groups['mons'][0] }}"
  register: public_and_cluster_network

- name: generate ceph configuration file
  template: src=ceph.conf.j2
            dest=/etc/ceph/ceph.conf
            owner=root
            group=root
            mode=0644
  notify:
    - restart ceph mons
    - restart ceph osds

- name: create rbd client directory
  file: path={{ ceph_common.rbd_client_admin_socket_path }}
        state=directory
        owner=root
        group=root
        mode=0644
