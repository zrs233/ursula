---
- name: fetch cinder keyring
  slurp: path=/etc/ceph/ceph.client.cinder.keyring
  run_once: true
  delegate_to: "{{ groups[ceph.monitor_group_name][0] }}"
  register: cinder_keyring

- name: write cinder keyring
  copy:
    dest: "{{ cinder_keyring['source'] }}"
    content: "{{ cinder_keyring['content'] | b64decode }}"
    mode: 0644
    owner: cinder
    group: cinder

# generate a uuid for cinder.conf and secret.xml and store it on the first controller
# truncate is to get rid of the newline
- name: generate cinder uuid
  shell: uuidgen > /etc/ceph/cinder_uuid && truncate -s -1 /etc/ceph/cinder_uuid
         creates=/etc/ceph/cinder_uuid
  run_once: true
  delegate_to:  "{{ groups['controller'][0] }}"

- name: fetch contents of uuid file
  slurp: path=/etc/ceph/cinder_uuid
  run_once: true
  delegate_to: "{{ groups['controller'][0] }}"
  register: cinder_uuid_file

# for redundancy, and if the hosts in [controller] get reordered
- name: copy uuid to all hosts
  copy:
    dest: "{{ cinder_uuid_file['source'] }}"
    content: "{{ cinder_uuid_file['content'] | b64decode }}"

- name: generate ceph secret xml file
  template: src=etc/ceph/secret.xml
            dest=/etc/ceph/secret.xml
            owner=root
            group=root
            mode=0644

- name: create client.cinder.key
  shell: ceph auth get-key client.cinder > /etc/ceph/client.cinder.key
         creates=/etc/ceph/client.cinder.key
  run_once: true
  delegate_to: "{{ groups[ceph.monitor_group_name][0] }}"

- name: fetch client.cinder.key
  slurp: path=/etc/ceph/client.cinder.key
  run_once: true
  delegate_to: "{{ groups[ceph.monitor_group_name][0] }}"
  register: client_cinder_key

- name: write client.cinder.key
  copy:
    dest: /etc/ceph/client.cinder.key
    content: "{{ client_cinder_key['content'] | b64decode }}"

- name: define virsh secret
  shell: virsh secret-define --file /etc/ceph/secret.xml

- name: set virsh secret
  shell: "virsh secret-set-value --secret {{ cinder_uuid_file.content | b64decode }} --base64 $(cat /etc/ceph/client.cinder.key)"
