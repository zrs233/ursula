---
- name: check if cinder user exists
  shell: getent passwd cinder
  register: cinder_user
  failed_when: False
  changed_when: False

- name: cinder user
  user: name=cinder shell=/bin/false createhome=no
  when: cinder_user|success

- name: cinder user
  user: name=cinder comment=cinder shell=/bin/false system=yes
        home=/nonexistent createhome=no
  when: not cinder_user|success

- name: /etc/cinder
  file: dest=/etc/cinder state=directory

- name: cinder lib dirs
  file: dest={{ item }} state=directory owner=cinder group=cinder
  with_items:
    - /var/lib/cinder
    - /var/lib/cinder/images

- name: cinder cache dir
  file: dest=/var/cache/cinder state=directory mode=0700 owner=cinder
        group=cinder

- name: cinder log dir
  file: dest=/var/log/cinder state=directory mode=0755 owner=cinder group=cinder

# generate a uuid for ceph and store it on the first controller
- name: generate ceph uuid
  shell: uuidgen > /etc/cinder/ceph_uuid
         creates=/etc/cinder/ceph_uuid
  run_once: true
  delegate_to:  "{{ groups['controller'][0] }}"
  when: ceph.enabled

- name: fetch contents of uuid file
  slurp: path=/etc/cinder/ceph_uuid
  run_once: true
  delegate_to: "{{ groups['controller'][0] }}"
  register: ceph_uuid_file
  when: ceph.enabled

# for redundancy, and if the hosts in [controller] get reordered
- name: copy uuid to all hosts
  copy:
    dest: "{{ ceph_uuid_file['source'] }}"
    content: "{{ ceph_uuid_file['content'] | b64decode }}"
  when: ceph.enabled

- name: cinder config
  template: src={{ item }} dest=/etc/cinder mode=0644
  with_fileglob: ../templates/etc/cinder/*
  notify: restart cinder services

- name: cinder sudoer
  template: src=etc/sudoers.d/cinder dest=/etc/sudoers.d/cinder owner=root
            group=root mode=0440

- include: logging.yml
  tags:
    - logrotate
    - logging
