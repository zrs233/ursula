# Legend: name, clear_port, enc_port, prefer_primary_backend
{% set haproxy_services = [
    [ 'horizon', 8080, 443, false ],
    [ 'keystone', haproxy.keystone.clear_port , haproxy.keystone.enc_port , false ],
    [ 'keystone-admin', haproxy.keystone_admin.clear_port, haproxy.keystone_admin.enc_port, false ],
    [ 'nova', haproxy.nova.clear_port, haproxy.nova.enc_port, false ],
    [ 'novnc', haproxy.novnc.clear_port, haproxy.novnc.enc_port, true ],
    [ 'glance', haproxy.glance.clear_port, haproxy.glance.enc_port, true ],
    [ 'neutron', haproxy.neutron.clear_port, haproxy.neutron.enc_port, false ],
    [ 'cinder', haproxy.cinder.clear_port, haproxy.cinder.enc_port, false ],
  ]
-%}
{% if heat.enabled -%}
    {% set _ = haproxy_services.append(['heat', 8004, 8005, false]) %}
    {% set _ = haproxy_services.append(['heat-cfn', 8000, 8001, false]) %}
{% endif -%}
{% if ironic.enabled -%}
    {% set _ = haproxy_services.append(['ironic', 6385, 6384, false]) %}
{% endif -%}
global
  log /dev/log local0
  maxconn 256
  user haproxy
  group haproxy
  daemon
  pidfile /var/run/haproxy/haproxy.pid
  tune.bufsize {{ haproxy.bufsize }}
  stats socket /var/run/haproxy/stats.sock mode 770 group {{ haproxy.stats_group }}

defaults
  log global
  mode http
  option httplog
  option dontlognull
  option redispatch
  option forwardfor
  option httpclose # needed for empty reponse body 204's
  timeout client 30s
  timeout server 30s
  timeout connect 1s
  timeout http-keep-alive 60s
  timeout http-request 30s

  stats enable
  stats refresh 10s
  stats uri /haproxy_stats
  stats auth provider_admin:{{ secrets.provider_admin_password }}

{% for name, clear_port, enc_port, prefer_primary_backend in haproxy_services -%}
frontend {{ name }}
  # Require TLS with AES
  bind :::{{ enc_port }} ssl crt /etc/haproxy/openstack.pem no-sslv3 ciphers AES128-SHA:AES256-SHA
  default_backend {{ name }}
  reqadd X-Forwarded-Proto:\ https

  {% if name == "horizon" -%}
  bind :::80
  redirect scheme https if !{ ssl_fc }
  {% endif -%}

backend {{ name }}

  {% if name == "novnc" -%}
  option httpchk GET /vnc_auto.html
  {% elif name == "ironic" -%}
  option httpchk GET /v1
  {% else -%}
  option httpchk /
  {% endif -%}
  balance source
  {% for host in groups['controller'] -%}

  {% if not prefer_primary_backend or hostvars[host][primary_interface]['ipv4']['address'] == primary_ip -%}
    server {{ host }} {{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ clear_port }} check maxconn 40
  {% else -%}
    server {{ host }} {{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ clear_port }} backup check maxconn 40
  {% endif -%}
  {% endfor %}

{% endfor %}
