[DEFAULT]
debug = {{ heat.logging.debug }}
verbose = {{ heat.logging.verbose }}

log_dir = /var/log/heat

{% macro rabbitmq_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

{% if rabbitmq.cluster -%}
rabbit_hosts = {{ rabbitmq_hosts() }}
{% else -%}
rabbit_host = {{ endpoints.rabbit }}
rabbit_port = 5672
{% endif -%}
rabbit_userid = {{ rabbitmq.user }}
rabbit_password = {{ secrets.rabbit_password }}

deferred_auth_method=trusts
trusts_delegated_roles=heat_stack_owner

stack_domain_admin=heat_domain_admin
stack_domain_admin_password={{ secrets.stack_domain_admin_password }}
stack_user_domain_name=heat
max_nested_stack_depth=16

heat_metadata_server_url={{ endpoints.heat_cfn.url.internal }}
heat_waitcondition_server_url={{ endpoints.heat_cfn.url.internal }}/{{ endpoints.heat_cfn.version }}/waitcondition
instance_connection_is_secure=1
region_name_for_services=RegionOne

rpc_thread_pool_size=64
notification_driver = heat.openstack.common.notifier.rpc_notifier
rpc_response_timeout=60

[database]
connection=mysql://heat:{{ secrets.db_password }}@{{ endpoints.db }}/heat?charset=utf8

[keystone_authtoken]
identity_uri = {{ endpoints.identity_uri }}
auth_uri = {{ endpoints.keystone.url.internal }}/{{ endpoints.keystone.version }}
admin_tenant_name = service
admin_user = heat
admin_password = {{ secrets.service_password }}
cafile = {{ heat.cafile }}
signing_dir = /var/cache/heat
delay_auth_decision=true

[heat_api]
bind_host = 0.0.0.0
bind_port = {{ endpoints.heat.port.backend_api }}
ca_file = {{ heat.cafile }}

[heat_api_cfn]
bind_host = 0.0.0.0
bind_port = {{ endpoints.heat_cfn.port.backend_api }}
ca_file = {{ heat.cafile }}

[clients]
ca_file = {{ heat.cafile }}
