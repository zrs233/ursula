[DEFAULT]

debug = {{ ironic.logging.debug }}
verbose = {{ ironic.logging.verbose }}

log_dir = /var/log/ironic

{% macro rabbitmq_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

{% if rabbitmq.cluster -%}
rabbit_hosts = {{ rabbitmq_hosts() }}
{% else -%}
rabbit_host = {{ endpoints.rabbit }}
rabbit_port = 5672
{% endif -%}
rabbit_userid = {{ rabbitmq.user }}
rabbit_password = {{ secrets.rabbit_password }}

sql_connection=mysql://ironic:{{ secrets.db_password }}@{{ endpoints.db }}/ironic?charset=utf8

enabled_drivers={{ ironic.enabled_drivers|join(',') }}

[keystone_authtoken]
# This should work, but doesn't ?
# identity_uri = https://{{ endpoints.keystone }}:5001/
auth_uri = https://{{ endpoints.keystone }}:5001/
auth_host = {{ endpoints.keystone }}
auth_port = 5001
auth_protocol = https
admin_tenant_name = service
admin_user = ironic
admin_password = {{ secrets.service_password }}
cafile = {{ ironic.cafile }}

[neutron]
url=https://{{ endpoints.main }}:{{ neutron.haproxy_api_port }}

[glance]
glance_host={{ endpoints.main }}

[pxe]
tftp_server = {{ ironic.tftp_server }}
tftp_root = {{ ironic.tftpboot_path }}

[conductor]
api_url = {{ ironic.api_url.scheme}}://{{ ironic.api_url.host }}:{{ ironic.api_url.port }}
