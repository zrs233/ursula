---
- name: discover keystone setup status
  command: mysql --batch --silent keystone -e "select type from service where type = 'compute'"
  failed_when: false
  register: keystone_setup

- name: set keystone_configured fact
  set_fact: keystone_configured=True
  when: keystone_setup.stdout|search("compute")

- name: generate admin_token
  set_fact: admin_token="{{ 'asdf' * 9|random(start=2) }}"
            insert_token=True

- name: add admin_token to keystone conf
  lineinfile: dest=/etc/keystone/keystone.conf
              line="admin_token = {{ admin_token }}"
              insertafter='\[DEFAULT\]'
              state=present

- name: add admin_token_auth to keystone pipeline
  template: dest=/etc/keystone/keystone-paste.ini
            src=roles/keystone/templates/etc/keystone/keystone-paste.ini

- name: restart keystone api
  service: name=keystone state=restarted

- name: wait for keystone to be functional
  pause: seconds=3
  # this could wait for a service uri to be up, but a 3 second sleep
  # works fine. Service uri may need auth to validate.

- name: keystone tenants
  keystone_user: tenant={{ item }}
                 tenant_description="{{ item }} tenant"
                 token={{ admin_token }}
  with_items: keystone.tenants

- name: keystone users
  keystone_user: user={{ item.name }}
                 password={{ item.password }}
                 tenant={{ item.tenant }}
                 token={{ admin_token }}
  with_items: keystone.users

- name: keystone roles
  keystone_user: role={{ item.role }}
                 user={{ item.user }}
                 tenant={{ item.tenant }}
                 token={{ admin_token }}
  with_items: keystone.user_roles

- name: keystone endpoint
  keystone_service: name={{ item.name }}
                    type={{ item.type }}
                    description='{{ item.description }}'
                    public_url={{ item.public_url }}
                    internal_url={{ item.internal_url }}
                    admin_url={{ item.admin_url }}
                    region=RegionOne
                    token={{ admin_token }}
  # TODO refactor keystone.services data to be easier to pull out individual services
  with_items: keystone.services
  when: endpoints[item.name] is defined and item.name == 'keystone'

- name: remote admin_token from keystone api
  lineinfile: dest=/etc/keystone/keystone.conf
              line="admin_token = {{ admin_token }}"
              state=absent

- name: set insert_token to false
  set_fact: insert_token=False

- name: remove admin_token_auth from keystone pipeline
  template: dest=/etc/keystone/keystone-paste.ini
            src=roles/keystone/templates/etc/keystone/keystone-paste.ini

- name: restart keystone api
  service: name=keystone state=restarted
