[DEFAULT]
debug = {{ keystone.logging.debug }}
verbose = {{ keystone.logging.verbose }}

public_endpoint = https://{{ endpoints.keystone }}:5001/
admin_endpoint = https://{{ endpoints.keystone }}:35358/

# Logging #
log_dir = /var/log/keystone

admin_workers = {{ keystone.admin_workers }}
public_workers = {{ keystone.public_workers }}

[sql]
connection=mysql://keystone:{{ secrets.db_password }}@{{ endpoints.db }}/keystone?charset=utf8

[assignment]
driver = keystone.assignment.backends.sql.Assignment

[identity]
{% if keystone.ldap.enabled|bool %}
driver = keystone.identity.backends.ldap.Identity
{% else %}
driver = keystone.identity.backends.sql.Identity
{% endif %}


{% if keystone.ldap.enabled|bool %}

[ldap]
url = {{ keystone.ldap.url}}
user = {{ keystone.ldap.keystone_user_dn }}
password = {{ keystone.ldap.keystone_user_password }} 
suffix = {{ keystone.ldap.suffix  }}
use_dumb_member = True
allow_subtree_delete = false
query_scope = one
user_enabled_default = true
user_enabled_emulation = False
user_allow_create = true
user_allow_update = true
user_allow_delete = true
user_tree_dn = {{ keystone.ldap.users_dn }}
user_objectclass = inetOrgPerson
user_id_attribute      = cn
user_name_attribute    = sn
user_mail_attribute    = mail
user_pass_attribute    = userPassword
user_enabled_attribute  = employeeType
user_default_project_id_attribute = departmentNumber
user_attribute_ignore = tenants
user_additional_attribute_mapping = description:description

group_tree_dn = {{ keystone.ldap.groups_dn }} 
group_objectclass = groupOfNames
group_id_attribute = cn
group_name_attribute = businessCategory 
group_member_attribute = member
group_desc_attribute = description
group_allow_create = true
group_allow_update = true
group_allow_delete = true
use_tls = false

{% endif -%}

[catalog]
driver = keystone.catalog.backends.sql.Catalog

[token]
driver = keystone.token.persistence.backends.sql.Token
provider = keystone.token.providers.uuid.Provider

# Amount of time a token should remain valid (in seconds)
expiration = {{ keystone.token_expiration_in_seconds }}

{% macro memcached_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

[memcache]
servers = {{ memcached_hosts() }}

[policy]
# driver = keystone.policy.backends.sql.Policy

[ec2]
# driver = keystone.contrib.ec2.backends.kvs.Ec2

[ssl]
enable = False
#certfile = /etc/keystone/ssl/certs/keystone.pem
#keyfile = /etc/keystone/ssl/private/keystonekey.pem
#ca_certs = /etc/keystone/ssl/certs/ca.pem
#cert_required = True

[signing]
#certfile = /etc/keystone/ssl/certs/signing_cert.pem
#keyfile = /etc/keystone/ssl/private/signing_key.pem
#ca_certs = /etc/keystone/ssl/certs/ca.pem
#key_size = 1024
#valid_days = 3650
#ca_password = None

[paste_deploy]
config_file = /etc/keystone/keystone-paste.ini

[revoke]
driver = keystone.contrib.revoke.backends.sql.Revoke
