- name: install the openldap packages
  apt: name={{ item }} state=installed
  with_items: "{{ openldap.ldap_pkgs }}"

- name: create directory for ldif files
  file: path={{ openldap.config_dir }}
        state=directory
        owner=root
        group=root
        mode=0400

- name: copy templates
  template: src={{ item }}
            dest={{ openldap.config_dir }}/{{ item | basename }}
  with_fileglob: ../templates/install_configure/*

- name: set log level
  shell: ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f {{ openldap.config_dir }}/logging.ldif

- name: get admin/suffix dn
  shell: ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -s sub -b "{{ openldap.suffix }}" cn=admin
  register: admin_name
  ignore_errors: yes
  changed_when: False

- name: ensure admin/suffix is created
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ openldap.config_dir }}/set_admin.ldif
  when: admin_name.stdout.count("cn={{ openldap.root_cn }}") < 1

- name: get base domain
  shell: ldapsearch -D {{ openldap.root_dn }} -w {{ openldap.root_password }}  -s sub -b "{{ openldap.suffix }}" objectclass=*
  register: base_domain
  ignore_errors: yes
  changed_when: False

- name: ensure base domain is created
  shell: ldapadd -D {{ openldap.root_dn }} -w {{ openldap.root_password }} -f {{ openldap.config_dir }}/base_domain.ldif
  when: base_domain.stdout.count("ou={{ openldap.company_ou }}") < 1

- name: get keystone_user
  shell: ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -s sub -b "{{ openldap.suffix }}" cn=keystone_user
  register: keystone_user
  ignore_errors: yes
  changed_when: False

- name: ensure keystone_user is created
  shell: ldapadd -D {{ openldap.root_dn }} -w {{ openldap.root_password }} -f {{ openldap.config_dir }}/keystone_user.ldif
  when: base_domain.stdout.count("cn={{ openldap.keystone_user_name }}") < 1

- name: check keystone_user access
  shell: ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -s sub -b olcDatabase={1}hdb,cn=config objectclass=* olcAccess
  register: keystone_user_access
  ignore_errors: yes
  changed_when: False

- name: ensure keystone_users access is created
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ openldap.config_dir }}/keystone_user_access.ldif
  ignore_errors: yes
  when: keystone_user_access.stdout.count("{{ openldap.keystone_user_name }}") < 1

- name: ensure other access is restored
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ openldap.config_dir }}/other_access_add.ldif
  ignore_errors: yes
  when: keystone_user_access.stdout.count("{{ openldap.keystone_user_name }}") < 1

- name: configure rsyslog for openldap
  copy: src=45-slapd.conf
        dest=/etc/rsyslog.d/45-slapd.conf
        owner=root
        group=root
        mode=0644
  notify:
  - restart rsyslog
