---
- name: "get {{ project_name }} source repo"
  git: repo="{{ openstack_source.git_mirror }}/{{ project_name }}.git"
       dest="/opt/stack/{{ project_name }}"
       version="{{ openstack_source.project_rev }}"
       update="{{ openstack_source.git_update }}"
  register: git_result
  until: git_result|success
  retries: 3
  notify:
    - "pip install {{ project_name }}"
    - "ensure project config directory exists"
    - "stat rootwrap.d"
    - "remove rootwrap.d if a directory"
    - "setup {{ project_name }} rootwrap"
    - "restart {{ project_name }} services"
    - "additional handlers"

# This happens after the git clone as one may locate the virtualenv
# in the same directory as the git clone path. In this scenario, git will
# not clone into a non-empty directory.
- name: "python requirements for {{ project_name }}"
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version|default(omit) }}"
    virtualenv: "{{ virtualenv|default(omit) }}"
  with_items: python_requirements
  when: python_requirements is defined

- meta: flush_handlers
