set -e

export STACK_RC=${STACK_RC:-~/.stackrc}
[[ -f ${STACK_RC} ]] && source ${STACK_RC}

export ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."
KEY_NAME=int-test
KEY_PATH=${ROOT}/envs/test/${KEY_NAME}.pem
LOGIN_USER=ubuntu
SSH_ARGS=\
" ${ANSIBLE_SSH_ARGS}"\
' -o LogLevel=quiet'\
' -o StrictHostKeyChecking=no'\
' -o UserKnownHostsFile=/dev/null'\
" -i ${KEY_PATH}"
export ANSIBLE_SSH_ARGS="${SSH_ARGS}"
export ANSIBLE_VAR_DEFAULTS_FILE="${ROOT}/envs/test/defaults.yml"
export IMAGE_ID=${IMAGE_ID:=1525c3f3-1224-4958-bd07-da9feaedf18b}

if [[ -n ${BUILD_TAG} ]]; then
  export testenv_instance_prefix=${BUILD_TAG}
elif [[ $(git rev-parse --abbrev-ref HEAD) == 'HEAD' ]]; then
  export testenv_instance_prefix=$(git rev-parse --short HEAD)
else
  export testenv_instance_prefix=$(git rev-parse --abbrev-ref HEAD)
fi

if [[ $TEST_ENV == "ci-allinone" ]]; then
  VMS="${testenv_instance_prefix}-allinone"
else
  TEST_ENV="ci-full"
  VMS="${testenv_instance_prefix}-controller-0 ${testenv_instance_prefix}-controller-1 ${testenv_instance_prefix}-compute-0"
fi

die() {
  echo "[ERROR] $*"; exit 1
}

# Given a vm name, return its public ip
public_ip() {
  nova list | grep "$1" | awk '{print $13}'
}

private_ip() {
  nova list | grep "$1" | awk '{print $12}' | awk -F= '{print $2}' | awk -F, '{print $1}'
}

ring_bell() {
  if [[ -z $CI ]]; then
    echo -en "\a" > /dev/tty
  fi
  return 0
}
